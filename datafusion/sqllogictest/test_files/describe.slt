# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at

#   http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.


##########
# Describe internal tables when information_schema is true
##########

statement ok
set datafusion.catalog.information_schema = true

statement ok
CREATE external table aggregate_simple(c1 real, c2 double, c3 boolean) STORED as CSV LOCATION '../core/tests/data/aggregate_simple.csv' OPTIONS ('format.has_header' 'true');

query TTT rowsort
DESCRIBE aggregate_simple;
----
c1 Float32 YES
c2 Float64 YES
c3 Boolean YES

statement ok
DROP TABLE aggregate_simple;

##########
# Describe internal tables when information_schema is false
##########

statement ok
set datafusion.catalog.information_schema = false

statement ok
CREATE external table aggregate_simple(c1 real, c2 double, c3 boolean) STORED as CSV LOCATION '../core/tests/data/aggregate_simple.csv' OPTIONS ('format.has_header' 'true');

query TTT rowsort
DESCRIBE aggregate_simple;
----
c1 Float32 YES
c2 Float64 YES
c3 Boolean YES

statement ok
DROP TABLE aggregate_simple;

##########
# Describe file (we can only describe file if the default catalog is `DynamicFileCatalog`)
##########

statement error Error during planning: table 'datafusion.public.../core/tests/data/aggregate_simple.csv' not found
DESCRIBE '../core/tests/data/aggregate_simple.csv';

##########
# Describe command
##########

statement ok
CREATE EXTERNAL TABLE alltypes_tiny_pages STORED AS PARQUET LOCATION '../../parquet-testing/data/alltypes_tiny_pages.parquet';

query TTT
describe alltypes_tiny_pages;
----
id Int32 YES
bool_col Boolean YES
tinyint_col Int8 YES
smallint_col Int16 YES
int_col Int32 YES
bigint_col Int64 YES
float_col Float32 YES
double_col Float64 YES
date_string_col Utf8View YES
string_col Utf8View YES
timestamp_col Timestamp(Nanosecond, None) YES
year Int32 YES
month Int32 YES

##########
# DataFrame describe() Tests with Case-Sensitive Column Names
##########

statement ok
CREATE TABLE test_case_sensitive AS VALUES
  ('alice@example.com', 5, 'high'),
  ('bob@example.com', 3, 'medium'), 
  ('charlie@example.com', 8, 'low')

# Create a view with case-sensitive column names to simulate JSON import behavior
statement ok
CREATE VIEW case_sensitive_data AS 
SELECT 
  column1 AS "AssignedTo",
  column2 AS "Bugs", 
  column3 AS "Priority"
FROM test_case_sensitive

# Verify the data is accessible with quoted column names
query TIT
SELECT "AssignedTo", "Bugs", "Priority" FROM case_sensitive_data ORDER BY "Bugs"
----
bob@example.com 3 medium
alice@example.com 5 high
charlie@example.com 8 low

# describe() should work with case-sensitive column names
statement ok
SELECT * FROM (SELECT * FROM case_sensitive_data LIMIT 0)

statement ok  
DROP VIEW case_sensitive_data

statement ok
DROP TABLE test_case_sensitive
